knitr::opts_chunk$set(echo = TRUE)
library(stringr)
library(tidyr)
library(dplyr)
library(skimr)
library(ggplot2)
data <- read.csv("procjena_kreditnog_rizika.csv")
skim(data)
threshold <- quantile(data$CreditAmount, 0.99)  # Set threshold at 99th percentile
# Exclude data points above the threshold
filtered_data <- subset(data, CreditAmount <= threshold)
boxplot(filtered_data$CreditAmount, main="Kredit", ylab="Iznos kredita u €")
points(mean(filtered_data$CreditAmount), col = "red")
threshold <- quantile(data$CreditAmount, 0.99)  # Set threshold at 99th percentile
# Exclude data points above the threshold
filtered_data <- subset(data, CreditAmount <= threshold)
h = hist(filtered_data$CreditAmount,
breaks = 50,
main="Histogram iznosa kredita, breaks = 50",
xlab="Iznos kredita [€]",
ylab='Ponavljanja',
col="green"
)
legend("topright", legend = "Srednja vrijednost", fill = "orange")
legend("top", legend = "Medijan", fill = "red")
abline(v = mean(filtered_data$CreditAmount), col = "orange", lwd=5, lty=10)
abline(v = median(filtered_data$CreditAmount), col= "red", lwd=5)
# Create a bar plot
bar_plot <- ggplot(data, aes(x = PercentOfIncome)) +
geom_bar(fill = "blue", color = "black") +
labs(title = "Iznos rate/Raspoloživi dohodak",
x = "Postotak rata/dohodak",
y = "Frekvencija")
# Print the plot
print(bar_plot)
credit_history_default <- data.frame(category = data$CreditHistory %>% unique)
credit_history_default$no_default <- sapply(credit_history_default$category, function(x){
nrow(data[data$CreditHistory == x & data$Default==0,])
})
credit_history_default$default <- sapply(credit_history_default$category, function(x){
nrow(data[data$CreditHistory == x & data$Default==1,])
})
credit_history_matirx <- matrix(
c(credit_history_default$no_default, credit_history_default$default), nrow = 2, byrow = T
)
rownames(credit_history_matirx) <- c("no_default", "default")
colnames(credit_history_matirx) <- credit_history_default$category
chisq.test(credit_history_matirx, correct = F)
female_clients <- data[str_detect(data$PersonalStatus, "female"),]
male_clients <- data[!str_detect(data$PersonalStatus, "female"),]
num_female_default <- nrow(female_clients[female_clients$Default == 1,])
num_male_default <- nrow(male_clients[male_clients$Default == 1,])
proportion_matrix <- matrix(c(nrow(male_clients)-num_male_default,
num_male_default,
nrow(female_clients)-num_female_default,
num_female_default), nrow=2, byrow = T)
colnames(proportion_matrix) <- c("no_default", "default")
rownames(proportion_matrix) <- c("male", "female")
# proportion_matrix
prop.test(proportion_matrix, alternative = "less")
Values <- matrix(c((nrow(female_clients)-num_female_default),
(nrow(male_clients)-num_male_default),
num_female_default,
num_male_default
), nrow=2, ncol=2, byrow = T)
barplot(Values, main="Kvantitativni prikaz", names.arg=c("žene", "muškarci"), xlab="spol", col = c("blue", "orange"))
legend("topright", inset = c(-0.1, 0), c("no default","default"), fill = c("blue", "orange"))
Values <- matrix(c((nrow(female_clients)-num_female_default)/nrow(female_clients),
(nrow(male_clients)-num_male_default)/nrow(male_clients),
num_female_default/nrow(female_clients),
num_male_default/nrow(male_clients)
), nrow=2, ncol=2, byrow = T)
barplot(Values, main="Postotni prikaz", names.arg=c("žene", "muškarci"), xlab="spol", col = c("blue", "orange"))
legend("topright", inset = c(-0.1, 0), c("no default","default"), fill = c("blue", "orange"))
male_single_clients <- male_clients[str_detect(male_clients$PersonalStatus, "single"),]
num_male_single_default <- sum(male_single_clients$Default == 1)
proportion_matrix[1,] <- c(nrow(male_single_clients) - num_male_single_default,
num_male_single_default)
# proportion_matrix
prop.test(proportion_matrix, alternative = "less")
Values <- matrix(c((nrow(female_clients)-num_female_default),
(nrow(male_single_clients)-num_male_single_default),
num_female_default,
num_male_single_default
), nrow=2, ncol=2, byrow = T)
barplot(Values, main="Kvantitativni prikaz", names.arg=c("žene", "slobodni muškarci"), xlab="spol", col = c("blue", "orange"))
legend("topright", inset = c(-0.1, 0), c("no default","default"), fill = c("blue", "orange"))
Values <- matrix(c((nrow(female_clients)-num_female_default)/nrow(female_clients),
(nrow(male_single_clients)-num_male_single_default)/nrow(male_single_clients),
num_female_default/nrow(female_clients),
num_male_single_default/nrow(male_single_clients)
), nrow=2, ncol=2, byrow = T)
barplot(Values, main="Postotni prikaz", names.arg=c("žene", "slobodni muškarci"), xlab="spol", col = c("blue", "orange"))
legend("topright", inset = c(-0.1, 0), c("no default", "default"), fill = c("blue", "orange"))
male_divor_clients <- male_clients[str_detect(male_clients$PersonalStatus, "divorced"),]
num_male_divor_default <- sum(male_divor_clients$Default == 1)
proportion_matrix[1,] <- c(nrow(male_divor_clients) - num_male_divor_default,
num_male_divor_default)
# proportion_matrix
prop.test(proportion_matrix, alternative = "less")
Values <- matrix(c((nrow(female_clients)-num_female_default),
(nrow(male_divor_clients)-num_male_divor_default),
num_female_default,
num_male_divor_default
), nrow=2, ncol=2, byrow = T)
barplot(Values, main="Kvantitativni prikaz", names.arg=c("žene", "rastavljeni muškarci"), xlab="spol", col = c("blue", "orange"))
legend("topright", inset = c(-0.1, 0), c("no default", "default"), fill = c("blue", "orange"))
Values <- matrix(c((nrow(female_clients)-num_female_default)/nrow(female_clients),
(nrow(male_divor_clients)-num_male_divor_default)/nrow(male_divor_clients),
num_female_default/nrow(female_clients),
num_male_divor_default/nrow(male_divor_clients)
), nrow=2, ncol=2, byrow = T)
barplot(Values, main="Postotni prikaz", names.arg=c("žene", "rastavljeni muškarci"), xlab="spol", col = c("blue", "orange"))
legend("topright", inset = c(-0.1, 0), c("no default", "default"), fill = c("blue", "orange"))
male_married_clients <- male_clients[str_detect(male_clients$PersonalStatus, "married"),]
num_male_married_default <- sum(male_married_clients$Default == 1)
proportion_matrix[1,] <- c(nrow(male_married_clients) - num_male_married_default,
num_male_married_default)
# proportion_matrix
prop.test(proportion_matrix, alternative = "less")
Values <- matrix(c((nrow(female_clients)-num_female_default),
(nrow(male_married_clients)-num_male_married_default),
num_female_default,
num_male_married_default
), nrow=2, ncol=2, byrow = T)
barplot(Values, main="Kvantitativni prikaz", names.arg=c("žene", "oženjeni muškarci"), xlab="spol", col = c("blue", "orange"))
legend("topright", inset = c(-0.1, 0), c("no default", "default"), fill = c("blue", "orange"))
Values <- matrix(c((nrow(female_clients)-num_female_default)/nrow(female_clients),
(nrow(male_married_clients)-num_male_married_default)/nrow(male_married_clients),
num_female_default/nrow(female_clients),
num_male_married_default/nrow(male_married_clients)
), nrow=2, ncol=2, byrow = T)
barplot(Values, main="Postotni udio", names.arg=c("žene", "oženjeni muškarci"), xlab="spol", col = c("blue", "orange"))
legend("topright", inset = c(-0.1, 0), c("no default", "default"), fill = c("blue", "orange"))
c("real estate", "building society savings agreement/ life insurance",
"unknown / no property", "car or other, not in attribute Account") %>%
sapply(function(x) {
filter(data, Property==x) %>% pull(CreditAmount) -> numbers
str_c(x, " n: ", length(numbers), "\n") %>% cat()
print(summary(numbers))
str_c(x, " standard deviation: ", sd(numbers), "\n") %>% cat()
cat("-------------------------------------------\n")
numbers
}) -> Prop_category
boxplot(Prop_category, names=c("real estate", "life insurance", "unknown", "car"))
for(x in 1:length(Prop_category)) {
hist(Prop_category[[x]], main = str_c("Histogram of ", names(Prop_category)[x]), xlab="Credit Amount")
}
